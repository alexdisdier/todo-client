{"version":3,"sources":["components/Header.tsx","components/Tasks/Task/Task.tsx","assets/img/loading.svg","HOC/withLoading.js","components/Tasks/Tasks.tsx","components/Input/Input.tsx","components/Button/Button.tsx","components/Footer.tsx","assets/img/Cloud_Warning.svg","components/Error/Error.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["header","props","title","className","Task","value","key","isDone","onDrag","onDrop","handleDelete","handleCrossOut","draggable","event","data-testid","onClick","withLoading","WrappedComponent","loading","rest","src","image","alt","tasks","lastIndex","length","style","height","overflowY","map","id","input","name","handleChange","placeholder","type","onChange","button","footer","error","LOCALSTORAGE_KEY_TASKS","App","state","appTitle","pos","onDragIndex","onDropIndex","buildTasks","localStorageTasks","localStorage","getItem","setState","JSON","parse","target","handleSubmit","preventDefault","task","nanoid","date","Date","newTasks","setItem","stringify","taskToUpdate","find","sort","a","b","filteredTasks","filter","index","onDragOver","this","color","Header","renderError","alignItems","display","renderTasks","onSubmit","Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.185f394b.chunk.js","sourcesContent":["import React from 'react';\n\ninterface IProps {\n  title: string;\n}\n\nconst header: React.FC<IProps> = (props: IProps) => {\n  const { title } = props;\n  return (\n    <header>\n      <h1 className=\"wrapper\">{title}</h1>\n    </header>\n  );\n};\n\nexport default header;\n","import React, { FC } from 'react';\n\nimport { TaskDefinition } from '../../../types';\n\nimport './Task.css';\n\ninterface IProps {\n  onDrag(event: React.MouseEvent, key: string): void;\n  onDrop(event: React.MouseEvent, key: string): void;\n  handleDelete(key: string): void;\n  handleCrossOut(key: string): void;\n  value: Pick<TaskDefinition, 'key' | 'title' | 'isDone'>;\n}\n\nconst Task: FC<IProps> = (props: IProps) => {\n  const {\n    value: { key, title, isDone },\n    onDrag,\n    onDrop,\n    handleDelete,\n    handleCrossOut\n  } = props;\n\n  return (\n    <>\n      <li\n        className=\"card-task\"\n        draggable={true}\n        onDrag={event => onDrag(event, key)}\n        onDrop={event => onDrop(event, key)}\n      >\n        <span\n          data-testid=\"task\"\n          className={isDone ? 'cross-task' : ''}\n          onClick={() => handleCrossOut(key)}\n        >\n          {title}\n        </span>\n        <span data-testid=\"delete-task\" onClick={() => handleDelete(key)}>\n          X\n        </span>\n      </li>\n    </>\n  );\n};\n\nexport default Task;\n","export default __webpack_public_path__ + \"static/media/loading.acea8664.svg\";","/* eslint-disable react/display-name */\n/* \n  HOC: a Higher Order Component is a function that accepts a component as paramater and returns an augmented version of this component. Often used in React libraries.\n  It wraps a component and returns an enhanced component. \n  hocFactory:: W: React.Component => E: React.Component\n*/\n\nimport React from 'react';\nimport image from '../assets/img/loading.svg';\nimport './withLoading.css';\n\nconst withLoading = WrappedComponent => ({ loading, ...rest }) =>\n  loading ? (\n    <div className=\"loader center-page loader--style1\" title=\"0\">\n      <img src={image} alt=\"loading gif\" />\n    </div>\n  ) : (\n    <WrappedComponent {...rest} />\n  );\n\nexport default withLoading;\n","import React, { FC } from 'react';\n\nimport Task from './Task/Task';\nimport withLoading from '../../HOC/withLoading';\n\nimport { TasksDefinition } from '../../types';\n\nimport './Tasks.css';\n\ninterface IProps {\n  tasks: TasksDefinition;\n  onDrag(event: React.MouseEvent, key: string): void;\n  onDrop(event: React.MouseEvent, key: string): void;\n  handleDelete(key: string): void;\n  handleCrossOut(key: string): void;\n}\n\nconst Tasks: FC<IProps> = (props: IProps) => {\n  const { tasks, handleDelete, handleCrossOut, onDrag, onDrop } = props;\n\n  const lastIndex = tasks.length;\n\n  return (\n    <ul\n      className=\"card\"\n      style={{ height: 'calc(100vh - 300px)', overflowY: 'scroll' }}\n    >\n      {tasks.map(({ key, title, isDone }) => (\n        <Task\n          key={key}\n          value={{ key, title, isDone }}\n          handleDelete={handleDelete}\n          handleCrossOut={handleCrossOut}\n          onDrag={onDrag}\n          onDrop={onDrop}\n        />\n      ))}\n      <li\n        id=\"last-index\"\n        className=\"card-task\"\n        onDrop={event => onDrop(event, `${lastIndex}`)}\n      >\n        <span> </span>\n      </li>\n    </ul>\n  );\n};\n\n// Currying HOC function where we can pass the props name we need to manipulate.\nexport default withLoading(Tasks);\n","import React from 'react';\n\nimport './Input.css';\n\ninterface IProps {\n  name: string;\n  value: string;\n  handleChange(event: React.FormEvent<HTMLInputElement>): void;\n}\n\nconst input: React.FC<IProps> = (props: IProps) => {\n  const { name, value, handleChange } = props;\n\n  return (\n    <input\n      className=\"card-task\"\n      placeholder=\"type some text here\"\n      type=\"text\"\n      name={name}\n      value={value}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default input;\n","import React from 'react';\n\nimport './Button.css';\n\nconst button = () => (\n  <button className=\"btn-add\" value=\"submit\">\n    <span>+</span>\n  </button>\n);\n\nexport default button;\n","import React from 'react';\n\nconst footer = () => <footer />;\n\nexport default footer;\n","export default __webpack_public_path__ + \"static/media/Cloud_Warning.22ef4966.svg\";","import React from 'react';\n\nimport image from '../../assets/img/Cloud_Warning.svg';\nimport './Error.css';\n\ninterface IProps {\n  error: string;\n}\n\nconst error: React.FC<IProps> = (props: IProps) => {\n  const { error } = props;\n\n  return (\n    <div id=\"error-loading\" className=\"absolute\">\n      <div className=\"relative\">\n        <img src={image} alt=\"cloud warning error\" />\n        <span>{error}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default error;\n","import React, { Component, FormEvent, MouseEvent } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { TaskDefinition } from './types';\n\nimport './assets/css/reset.css';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks/Tasks';\nimport Input from './components/Input/Input';\nimport Button from './components/Button/Button';\nimport Footer from './components/Footer';\n\nimport Error from './components/Error/Error';\n\nconst LOCALSTORAGE_KEY_TASKS = 'tasks';\n\ninterface IState {\n  appTitle: string;\n  input: string;\n  tasks: TaskDefinition[];\n  error: string;\n  pos: number;\n  onDragIndex: number;\n  onDropIndex: number;\n  loading: boolean;\n}\n\nclass App extends Component<{}, IState> {\n  state: IState = {\n    appTitle: 'To do list',\n    input: '',\n    tasks: [],\n    error: '',\n    pos: 0,\n    onDragIndex: 0,\n    onDropIndex: 0,\n    loading: false\n  };\n\n  buildTasks = (): void => {\n    const localStorageTasks =\n      localStorage.getItem(LOCALSTORAGE_KEY_TASKS) || '';\n\n    this.setState({\n      tasks: JSON.parse(localStorageTasks) || [],\n      loading: false\n    });\n  };\n\n  componentDidMount() {\n    const localStorageTasks =\n      localStorage.getItem(LOCALSTORAGE_KEY_TASKS) || '';\n\n    if (localStorageTasks) {\n      this.setState({\n        tasks: JSON.parse(localStorageTasks) || [],\n        loading: false\n      });\n    }\n  }\n\n  handleChange = (event: FormEvent<HTMLInputElement>) => {\n    const { value }: any = event.target;\n    this.setState({\n      input: value\n    });\n  };\n\n  handleSubmit = (event: any): void => {\n    const { tasks, input } = this.state;\n\n    event.preventDefault();\n    const lastIndex: number = tasks.length;\n    const task = {\n      key: nanoid(5),\n      title: input,\n      isDone: false,\n      date: new Date(),\n      pos: lastIndex + 1\n    } as TaskDefinition;\n\n    const newTasks = [...tasks, task];\n\n    localStorage.setItem(LOCALSTORAGE_KEY_TASKS, JSON.stringify(newTasks));\n\n    this.setState({\n      input: '',\n      tasks: newTasks\n    });\n  };\n\n  /**\n   * - toggles crossing out a task\n   * - sorts the list by done task\n   */\n  handleCrossOut = (key: string): void => {\n    const { tasks }: any = this.state;\n    const newTasks: TaskDefinition[] = [...tasks];\n\n    const taskToUpdate = newTasks.find(task => task.key === key);\n\n    if (!taskToUpdate) return;\n\n    taskToUpdate.isDone = !taskToUpdate.isDone;\n\n    newTasks.sort((a, b) => {\n      if (a.isDone === b.isDone) return 0;\n      if (a.isDone) return -1;\n      return 1;\n    });\n\n    localStorage.setItem(LOCALSTORAGE_KEY_TASKS, JSON.stringify(newTasks));\n\n    this.setState({ tasks: newTasks });\n  };\n\n  handleDelete = (key: string) => {\n    const { tasks }: any = this.state;\n\n    const newTasks: TaskDefinition[] = [...tasks];\n\n    const filteredTasks = newTasks.filter(task => task.key !== key);\n\n    localStorage.setItem(LOCALSTORAGE_KEY_TASKS, JSON.stringify(filteredTasks));\n\n    this.setState({ tasks: filteredTasks });\n  };\n\n  onDrag = (event: MouseEvent, index: number): void => {\n    event.preventDefault();\n    this.setState({\n      onDragIndex: index\n    });\n  };\n\n  onDragOver = (event: MouseEvent) => {\n    event.preventDefault();\n  };\n\n  onDrop = async (event: MouseEvent, index: string) => {\n    // let newArr = [...this.state.tasks];\n    // const itemDragged = newArr.splice(this.state.onDragIndex, 1);\n    // await this.setState({\n    //   onDropIndex: index\n    // });\n    // newArr.splice(this.state.onDropIndex, 0, itemDragged[0]);\n    // this.setState({\n    //   tasks: newArr\n    // });\n  };\n\n  renderError() {\n    if (this.state.error !== '') {\n      return <Error error={this.state.error} />;\n    } else {\n      return null;\n    }\n  }\n\n  renderTasks() {\n    const { tasks, loading } = this.state;\n\n    if (tasks.length === 0)\n      return (\n        <div style={{ color: 'black' }}>\n          Input your first task. It will only be saved in your browser\n        </div>\n      );\n\n    return (\n      <Tasks\n        tasks={tasks}\n        handleCrossOut={this.handleCrossOut}\n        handleDelete={this.handleDelete}\n        onDrag={this.onDrag}\n        onDrop={this.onDrop}\n        loading={loading}\n      />\n    );\n  }\n\n  render() {\n    const { appTitle, input, tasks } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Header title={appTitle} />\n\n        {this.renderError()}\n\n        <div\n          className=\"card-container wrapper done\"\n          style={{\n            alignItems: `${tasks.length === 0 ? 'center' : 'unset'}`,\n            display: `${tasks.length === 0 ? 'flex' : 'unset'}`\n          }}\n          onDragOver={this.onDragOver}\n        >\n          {this.renderTasks()}\n        </div>\n\n        <div className=\"wrapper\">\n          <form className=\"card\" onSubmit={this.handleSubmit}>\n            <Input\n              name=\"input\"\n              value={input}\n              handleChange={this.handleChange}\n            />\n            <div className=\"btn-add-container\">\n              <Button />\n            </div>\n          </form>\n        </div>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* istanbul ignore next */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n/* istanbul ignore next */\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\n/* istanbul ignore next */\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\n/* istanbul ignore next */\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\n/* istanbul ignore next */\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/* istanbul ignore next */\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n/* istanbul ignore next */\nserviceWorker.unregister();\n"],"sourceRoot":""}